name: Publish to PyPI

on:
  # Trigger on release creation
  release:
    types: [published]
  
  # Trigger on push to main (for Test PyPI)
  push:
    branches: [main]
    paths:
      - 'sdk/python/**'
      - '.github/workflows/publish.yml'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      publish_to:
        description: 'Where to publish'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build:
    name: Build Python Package
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        cd sdk/python
        python -m build
    
    - name: Check package
      run: |
        cd sdk/python
        python -m twine check dist/*
        ls -la dist/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: sdk/python/dist/

  publish-to-testpypi:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    # Only publish to Test PyPI on push to main or manual trigger with testpypi selected
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to == 'testpypi')
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    # Only publish on release
    if: github.event_name == 'release'
    
    environment: pypi  # This matches your PyPI configuration
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # No repository-url means production PyPI
